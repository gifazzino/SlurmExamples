# CommonFramework configuration
stage: graph_construction
model: MetricLearning
input_dir: /mnt/data2/data/ATLAS-P2-RUN4-03-00-00_Rel.24_ttbar_uncorr_pu200_v9 # Should contain the files used in training and inference
stage_dir: training_stage # A directory to be created that will store logs, artifacts, and output data
project: Giulia_testing # Used in logging
accelerator: gpu
devices: 2
nodes: 1

# Dataset parameters
data_split: [80, 10, 10] # Number of [training, validation, testing] examples

# Truth and weighting parameters. The syntax is as follows:
  # Single value: track[key] == value
  # List of 2 floats: value1 <= track[key] <= value2
  # List with a string as the first value: First value defines the boolean test, the second value is a list or value. Boolean tests are: (in, not_in, is, is_not, within, not_within)
  # All other tracks follow the default: If a true edge, weight=0. If a fake edge, weight=1.


weighting:
- weight: 1.
  conditions: 
    edge_y: False
- weight: 0.
  conditions:
    edge_y: True
- weight: 4.0
  conditions:
    track_particle_nhits: [3., .inf]
    track_particle_pdgId: [not_in, 11, -11]
    track_particle_primary: True
    track_particle_pt: [900., .inf]
    edge_y: True

# A list of hard cut conditions. Any hits not passing these conditions will be removed from the training and validation dataset.
# By definition, noise will not pass any of these cuts, so any hard cuts will remove noise.
hard_cuts:
 track_particle_pt: [1000, .inf]

# Model parameters
undirected: True
train_undirected: True
node_features: [hit_r,   hit_phi, hit_z]
node_scales:   [1000, 3.14, 1000]
emb_hidden: 1024
nb_layer: 4
emb_dim: 12
activation: Tanh
randomisation: 1
points_per_batch: 50000
r_train: 0.1
knn: 50
knn_val: 1000

# Training parameters
warmup: 5
margin: 0.1
lr: 0.01
factor: 0.7
patience: 10
max_epochs: 10
metric_to_monitor: f1
metric_mode: max

event_prefix: ttbar_uncorr_pu200_v9
variable_with_prefix: true # Set to true to use the new naming scheme (with prefix to indicate the variable type)
add_variable_name_prefix_in_pyg: false # Set to true to convert old pyg files to using the new naming scheme (with prefix to indicate the variable type). Only needed when the input pyg files are without the name prefix.
add_variable_name_prefix_in_ckpt: false # Set to true to convert old ckpt to using the new naming scheme (with prefix to indicate the variable type). Only needed when the input ckpt files are without the name prefix.
